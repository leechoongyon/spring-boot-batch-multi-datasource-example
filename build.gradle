plugins {
    id 'java'
    id 'org.springframework.boot' version '2.5.3'
//    id 'org.springframework.boot' version '2.2.8.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

apply plugin: 'java'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.springframework.boot'
apply plugin: "com.ewerk.gradle.plugins.querydsl"

group 'com.example.batch'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}


dependencies {
    runtimeOnly 'mysql:mysql-connector-java'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    runtimeOnly('org.springframework.boot:spring-boot-devtools')
    implementation("com.fasterxml.jackson.datatype:jackson-datatype-hibernate5")


    implementation("com.querydsl:querydsl-jpa") // querydsl
    implementation("com.querydsl:querydsl-apt") // querydsl
    compile('org.springframework.boot:spring-boot-starter-data-jpa')

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    compile('org.springframework.boot:spring-boot-starter')

    implementation 'org.springframework.boot:spring-boot-starter-batch'

    runtimeOnly 'com.h2database:h2'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.batch:spring-batch-test'

    testCompileOnly 'junit:junit:4.12'


    // MySQL
//    runtimeOnly 'mysql:mysql-connector-java'

//    compileOnly 'org.projectlombok:lombok'
//    annotationProcessor 'org.projectlombok:lombok'
//    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

//    runtimeOnly('org.springframework.boot:spring-boot-devtools')

//    implementation("com.fasterxml.jackson.datatype:jackson-datatype-hibernate5")
//    implementation('org.springframework.boot:spring-boot-starter')
//    implementation 'org.springframework.boot:spring-boot-starter-validation'

//    runtimeOnly 'com.h2database:h2'

//    implementation 'org.springframework.boot:spring-boot-starter-batch'
//    implementation("com.querydsl:querydsl-jpa") // querydsl
//    implementation("com.querydsl:querydsl-apt") // querydsl
//    compile('org.springframework.boot:spring-boot-starter-data-jpa')

//    testImplementation 'org.springframework.boot:spring-boot-starter-test'
//    testCompile('org.springframework.boot:spring-boot-starter-test')
//    testImplementation 'org.springframework.batch:spring-batch-test'
//    testCompileOnly 'junit:junit:4.12'
//    testCompile group: 'junit', name: 'junit', version: '4.12'
}

test {
    useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
configurations {
    querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}